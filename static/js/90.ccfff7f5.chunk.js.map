{"version":3,"file":"static/js/90.ccfff7f5.chunk.js","mappings":"wQAEaA,E,OAAiBC,GAAAA,IAAH,6F,SCAdC,EAAa,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC5C,OACE,UAACL,EAAD,YACE,gBAAKM,IAAG,wCAAmCD,GAAgBE,IAAKJ,KAChE,wBAAKA,KACL,uCAAeC,OAGpB,ECgCD,EApCa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,6CACiBJ,EADjB,sDAFJ,OAEbK,EAFa,OAKnBN,EAAQM,EAASC,KAAKR,MALH,iDAOnBS,EAAAA,EAAAA,IAAM,KAAIC,SAPS,yDAAH,qDAWpBL,GACD,GAAE,CAACH,KAEF,0BACE,wBACGF,GACCA,EAAKW,KAAI,SAAAC,GAAM,OACb,yBACE,SAACnB,EAAD,CACEC,KAAMkB,EAAOlB,KACbC,UAAWiB,EAAOjB,UAClBC,aAAcgB,EAAOhB,gBAJhBgB,EAAOC,UADH,OAYxB,C","sources":["components/ArtistCard/ArtistCard.styled.js","components/ArtistCard/ArtistCard.js","components/Cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapArtistCard = styled.div`\n  margin-bottom: 5px;\n  padding: 5px;\n  border: 1px solid silver;\n`;\n","import { WrapArtistCard } from './ArtistCard.styled';\n\nexport const ArtistCard = ({ name, character, profile_path }) => {\n  return (\n    <WrapArtistCard>\n      <img src={`https://image.tmdb.org/t/p/w92${profile_path}`} alt={name} />\n      <h4>{name}</h4>\n      <p>Character: {character}</p>\n    </WrapArtistCard>\n  );\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ArtistCard } from 'components/ArtistCard/ArtistCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=f9d814745439162b2afd5ff7833832ed`\n        );\n        setCast(response.data.cast);\n      } catch (err) {\n        toast(err.message);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <div>\n      <ul>\n        {cast &&\n          cast.map(artist => (\n            <li key={artist.credit_id}>\n              <ArtistCard\n                name={artist.name}\n                character={artist.character}\n                profile_path={artist.profile_path}\n              />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["WrapArtistCard","styled","ArtistCard","name","character","profile_path","src","alt","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","axios","response","data","toast","message","map","artist","credit_id"],"sourceRoot":""}