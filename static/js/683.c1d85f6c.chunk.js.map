{"version":3,"file":"static/js/683.c1d85f6c.chunk.js","mappings":"wQAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtBC,GACJ,0BACE,wBACGD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,QASnB,OAAOH,EAAQM,OAAS,EACpBL,EADG,2CAGR,ECSD,EArBgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,MAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,6CACiBJ,EADjB,sDAFD,OAEhBK,EAFgB,OAKtBN,EAAWM,EAASC,KAAKC,SALH,iDAOtBC,EAAAA,EAAAA,IAAM,KAAIC,SAPY,yDAAH,qDAWvBN,GACD,GAAE,CAACH,KACG,yBAAMT,IAAW,SAACD,EAAD,CAAaC,QAASA,KAC/C,C","sources":["components/ReviewsList/ReviewsList.js","components/Reviews/Reviews.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewsList = ({ reviews }) => {\n  const markup = (\n    <div>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4>Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n  return reviews.length > 0\n    ? markup\n    : `We don't have any reviews for this movie.`;\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from '../ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=f9d814745439162b2afd5ff7833832ed`\n        );\n        setReviews(response.data.results);\n      } catch (err) {\n        toast(err.message);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n  return <div>{reviews && <ReviewsList reviews={reviews} />}</div>;\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","reviews","markup","map","id","author","content","length","useState","setReviews","movieId","useParams","useEffect","fetchMovieReviews","axios","response","data","results","toast","message"],"sourceRoot":""}